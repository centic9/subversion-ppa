From: Peter Samuelson <peter@p12n.org>
Date: Sat, 11 Mar 2006 23:42:32 -0600
Subject: Make SONAME handling explicit and sensitive to apr version

libapr1 enabled large file support.  That means that on 32-bit
platforms the widths of fundamental types like apr_off_t changed, so
adopting it breaks the libsvn ABI. (Bug#266170)

Therefore we must bump soname.  The upstream consensus seems to be
that where this ABI bump shows up as a problem, users can link to
libapr0 or rebuild all reverse-dependencies --- ok, this can be a
Debian-specific patch.

[ps, 2006-01-08: On 64-bit platforms, APR_HAS_LARGE_FILES is not set.
 From an upstream perspective, I wanted to set the subversion ABI number
 based on this characteristic.  However, from a Debian perspective it
 was incorrect as we want to use SOVERSION 1 unconditionally with libapr1
 for simplicity.  Closes: #391744]

[ps, 2008-06-19: The soname should only be passed into library link
 lines, not binary link lines.  Fixing that gets rid of an annoying
 warning.]

[ps, 2009-03-27: libsvn-fs and libsvn-ra must look for the correct
 library filenames to dynamically load.  This never mattered until now
 because we weren't building svn_ra and svn_fs modules in a
 runtime-loadable fashion, but nowadays we build the gnome-keyring
 library that way.

 I'd prefer to move all these non-public libraries, including the
 swig stubs, to /usr/lib/svn.  They don't need to be in /usr/lib.]

[ps, 2009-10-22: Fix the LINK_CXX target, too, now that we're
 finally using it.  Technically there is a distinction between linking a
 C++ library and a C++ binary, but we don't have any C++ binaries, so
 LINK_CXX means the library.]

Submitted at http://svn.haxx.se/dev/archive-2006-03/0522.shtml

Index: subversion-1.7.0/Makefile.in
===================================================================
--- subversion-1.7.0.orig/Makefile.in	2011-10-20 21:55:51.000000000 +0200
+++ subversion-1.7.0/Makefile.in	2011-10-20 21:55:54.000000000 +0200
@@ -205,8 +205,8 @@
 
 LINK = $(LIBTOOL) $(LTFLAGS) --mode=link $(CC) $(LT_LDFLAGS) $(CFLAGS) $(LDFLAGS)
 LINK_LIB = $(LINK) $(LT_SO_VERSION)
-LINK_CXX = $(LIBTOOL) $(LTCXXFLAGS) --mode=link $(CXX) $(LT_LDFLAGS) $(CXXFLAGS) $(LDFLAGS) -rpath $(libdir)
-LINK_LIB = $(LINK) -rpath $(libdir)
+LINK_CXX = $(LIBTOOL) $(LTCXXFLAGS) --mode=link $(CXX) $(LT_LDFLAGS) $(CXXFLAGS) $(LDFLAGS) -rpath $(libdir) $(LT_SOVERSION)
+LINK_LIB = $(LINK) -rpath $(libdir) $(LT_SO_VERSION)
 LINK_CXX_LIB = $(LINK_CXX) $(LT_SO_VERSION)
 
 # special link rule for mod_dav_svn
Index: subversion-1.7.0/build/ac-macros/apr.m4
===================================================================
--- subversion-1.7.0.orig/build/ac-macros/apr.m4	2011-10-20 20:45:56.000000000 +0200
+++ subversion-1.7.0/build/ac-macros/apr.m4	2011-10-20 21:55:54.000000000 +0200
@@ -111,11 +111,31 @@
     AC_MSG_ERROR([apr-config --shlib-path-var failed])
   fi
 
+  dnl Determine whether or not we will be using the 64-bit apr_off_t ABI.
+  dnl This necessarily changes the SONAME of libsvn_*.
+if test `expr $apr_version : 0` -ne 0; then
+  SVN_LT_SOVERSION="-version-info 0"
+else
+  SVN_LT_SOVERSION="-version-info 1"
+fi
+  dnl   oldcppflags=$CPPFLAGS
+  dnl   CPPFLAGS="$CPPFLAGS $SVN_APR_INCLUDES"
+  dnl   AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+  dnl #include <apr.h>
+  dnl #if APR_HAS_LARGE_FILES
+  dnl # error Large file ABI required
+  dnl #endif
+  dnl     ]])], [apr_lfs_abi=0], [apr_lfs_abi=1])
+  dnl   CPPFLAGS=$oldcppflags
+  dnl
+  dnl SVN_LT_SOVERSION="-version-info $apr_lfs_abi"
+
   AC_SUBST(SVN_APR_PREFIX)
   AC_SUBST(SVN_APR_CONFIG, ["$apr_config"])
   AC_SUBST(SVN_APR_INCLUDES)
   AC_SUBST(SVN_APR_LIBS)
   AC_SUBST(SVN_APR_SHLIB_PATH_VAR)
+  AC_SUBST(SVN_LT_SOVERSION)
 ])
 
 dnl SVN_DOWNLOAD_APR()
Index: subversion-1.7.0/subversion/libsvn_fs/fs-loader.c
===================================================================
--- subversion-1.7.0.orig/subversion/libsvn_fs/fs-loader.c	2011-10-20 20:47:31.000000000 +0200
+++ subversion-1.7.0/subversion/libsvn_fs/fs-loader.c	2011-10-20 21:55:54.000000000 +0200
@@ -100,7 +100,7 @@
     const char *funcname;
     apr_status_t status;
 
-    libname = apr_psprintf(pool, "libsvn_fs_%s-%d.so.0",
+    libname = apr_psprintf(pool, "libsvn_fs_%s-%d.so.1",
                            name, SVN_VER_MAJOR);
     funcname = apr_psprintf(pool, "svn_fs_%s__init", name);
 
Index: subversion-1.7.0/subversion/libsvn_ra/ra_loader.c
===================================================================
--- subversion-1.7.0.orig/subversion/libsvn_ra/ra_loader.c	2011-10-20 20:47:31.000000000 +0200
+++ subversion-1.7.0/subversion/libsvn_ra/ra_loader.c	2011-10-20 21:55:54.000000000 +0200
@@ -159,7 +159,7 @@
     const char *compat_funcname;
     apr_status_t status;
 
-    libname = apr_psprintf(pool, "libsvn_ra_%s-%d.so.0",
+    libname = apr_psprintf(pool, "libsvn_ra_%s-%d.so.1",
                            ra_name, SVN_VER_MAJOR);
     funcname = apr_psprintf(pool, "svn_ra_%s__init", ra_name);
     compat_funcname = apr_psprintf(pool, "svn_ra_%s_init", ra_name);
Index: subversion-1.7.0/subversion/libsvn_subr/auth.c
===================================================================
--- subversion-1.7.0.orig/subversion/libsvn_subr/auth.c	2011-10-20 20:47:32.000000000 +0200
+++ subversion-1.7.0/subversion/libsvn_subr/auth.c	2011-10-20 21:55:54.000000000 +0200
@@ -399,7 +399,7 @@
       const char *library_label, *library_name;
       const char *provider_function_name, *version_function_name;
       library_name = apr_psprintf(pool,
-                                  "libsvn_auth_%s-%d.so.0",
+                                  "libsvn_auth_%s-%d.so.1",
                                   provider_name,
                                   SVN_VER_MAJOR);
       library_label = apr_psprintf(pool, "svn_%s", provider_name);
