From: Roman Zippel <zippel@linux-m68k.org>
Date: Mon, 28 Aug 2006 02:32:59 +0200
Subject: ruby tests: Avoid race between starting svnserve and connecting to it

The tbm NSLU2 patch.  If the client tries to connect too soon, before
svnserve has initialised itself, the test in progress gets a
'connection refused' and fails.

This one's only needed on really slow machines.  It prevents random
ruby testsuite failures - observed on an arm with 32 MB of RAM and
m68k buildds of unknown specs.

[A predecessor to this patch just used "sleep 1".  rooneg upstream
 didn't like it because it was a kludge and it added 60 seconds to the
 build time.  But oh well, it was easy to write and easy to maintain.

 Later the patch was adjusted to use sleep 3 instead of sleep 1, as a
 quick fix for build failures on the even-slower m68k autobuilders.

 Roman's implementation of the ruby-test-svnserve-race patch (based
 on an earlier patch from nori) is actually reliable.  In this
 version, instead of just sleeping, we contact the running svnserve
 process in a loop to see if it has started listening.

 Thanks to Kobayashi Noritada, Wouter Verhelst and Roman Zippel.]

Fixes: http://bugs.debian.org/378837

--- a/subversion/bindings/swig/ruby/test/util.rb
+++ b/subversion/bindings/swig/ruby/test/util.rb
@@ -1,5 +1,6 @@
 require "fileutils"
 require "pathname"
+require "socket"
 
 require "my-assertions"
 
@@ -222,11 +223,7 @@
                "-d", "--foreground")
         }
         pid, status = Process.waitpid2(@svnserve_pid, Process::WNOHANG)
-        if status and status.exited?
-          if $DEBUG
-            STDERR.puts "port #{port} couldn't be used for svnserve"
-          end
-        else
+        if wait_until_svnserve_gets_available_at(port)
           # svnserve started successfully.  Note port number and cease
           # startup attempts.
           @svnserve_port = port
@@ -289,4 +286,25 @@
     include Svnserve
     extend SetupEnvironment
   end
+
+  # Waits until svnserve gets available at port +port+, avoiding the race
+  # condition between starting up a svnserve process and trying to connect
+  # to it (Bug#378837 in Debian's BTS).
+  def wait_until_svnserve_gets_available_at(port)
+    1000.times do |n|
+      begin
+	pid, status = Process.waitpid2(@svnserve_pid, Process::WNOHANG)
+	if status and status.exited?
+	  STDERR.puts "port #{port} couldn't be used for svnserve"
+	  return false
+	end
+	TCPSocket.new(@svnserve_host, port).close
+      rescue Errno::ECONNREFUSED
+	sleep(n < 10 ? 0.2 : 0.5)
+      else
+	return true
+      end
+    end
+    raise "svnserve couldn't get available at port #{port}"
+  end
 end
